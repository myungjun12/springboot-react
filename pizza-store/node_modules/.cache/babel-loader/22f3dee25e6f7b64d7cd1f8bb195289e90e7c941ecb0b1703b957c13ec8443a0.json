{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring_react_workspace\\\\pizza-store\\\\src\\\\components\\\\PizzaResult.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PizzaResult = () => {\n  _s();\n  // 검색된 피자들을 담을 변수명 설정\n  const [pizzas, setPizzas] = useState([]);\n\n  // useLocation = 현재 페이지의 정보를 가지고 있음 경로나 검색된 문자들\n  // *** useLocation 안에는 pathname, seach, hash, state, key 존재함 ***\n  const location = useLocation(); // 컴퓨터 상에서 내 위치정보를 변수에 담음\n  const query = new URLSearchParams(location.search).get(\"query\");\n  // 정보가 담긴 변수 안에서 특정 키의 값을 가지고 오는 것\n\n  // 검색에 대한 정보가 바로 보여야하고, 검색어가 수정되면 재 검색을 해야함\n  // query = 검색어로 많이쓰이는 단어 = keyword  searchTerm  query\n  useEffect(() => {\n    // query 값이 바뀔 때마다 다시 db에서 검색된 내용 불러오기\n    /* 쿼리 값이 바뀔 때마다 다시 db에서 검색된 내용 불러오기*/\n    //만약에 쿼리가 존재하면\n    if (query) {\n      axios.get(`http://localhost:9090/api/pizza/search?query=${query}`).then(response => setPizzas(response.data)).catch(e => console.error(\"문제가 발생하여 검색을 가져오지 못합니다.\"), e);\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pizza-search-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), pizzas.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pizzas.map(pizza => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: pizza.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pizza.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pizza.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, pizza.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(PizzaResult, \"PhmvZReFEVnsOq6TTL6qvwY5p9M=\", false, function () {\n  return [useLocation];\n});\n_c = PizzaResult;\nexport default PizzaResult;\nvar _c;\n$RefreshReg$(_c, \"PizzaResult\");","map":{"version":3,"names":["axios","useState","useLocation","jsxDEV","_jsxDEV","PizzaResult","_s","pizzas","setPizzas","location","query","URLSearchParams","search","get","useEffect","then","response","data","catch","e","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pizza","name","description","price","id","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring_react_workspace/pizza-store/src/components/PizzaResult.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst PizzaResult = () => {\r\n    // 검색된 피자들을 담을 변수명 설정\r\n    const [pizzas, setPizzas] = useState([]);\r\n\r\n    // useLocation = 현재 페이지의 정보를 가지고 있음 경로나 검색된 문자들\r\n    // *** useLocation 안에는 pathname, seach, hash, state, key 존재함 ***\r\n    const location = useLocation(); // 컴퓨터 상에서 내 위치정보를 변수에 담음\r\n    const query = new URLSearchParams(location.search).get(\"query\");\r\n    // 정보가 담긴 변수 안에서 특정 키의 값을 가지고 오는 것\r\n\r\n    // 검색에 대한 정보가 바로 보여야하고, 검색어가 수정되면 재 검색을 해야함\r\n    // query = 검색어로 많이쓰이는 단어 = keyword  searchTerm  query\r\n    useEffect(() => { // query 값이 바뀔 때마다 다시 db에서 검색된 내용 불러오기\r\n        /* 쿼리 값이 바뀔 때마다 다시 db에서 검색된 내용 불러오기*/\r\n        //만약에 쿼리가 존재하면\r\n        if(query) {\r\n            axios.get(`http://localhost:9090/api/pizza/search?query=${query}`)\r\n            .then((response) => setPizzas(response.data))\r\n            .catch((e) => console.error(\"문제가 발생하여 검색을 가져오지 못합니다.\"),e);\r\n        }\r\n    }, [query]);\r\n    return (\r\n        <div className=\"pizza-search-list\">\r\n            <h1>검색 결과 : </h1>\r\n            {/* 검색된 피자들을 map을 이용해서 모두 보기 검색은 length가 0 초과 일때만 검색 가능하게 설정*/}\r\n        {pizzas.length > 0 ? \r\n        (<div>\r\n            {pizzas.map(pizza => (\r\n                <div key={pizza.id}>\r\n                    <p>{pizza.name}</p>\r\n                    <p>{pizza.description}</p>\r\n                    <p>{pizza.price}</p>\r\n                </div>\r\n            ))}\r\n        </div>)\r\n\r\n         : \r\n\r\n         (<div>\r\n            검색결과가 존재하지 않습니다.\r\n         </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PizzaResult;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMQ,KAAK,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;EAC/D;;EAEA;EACA;EACAC,SAAS,CAAC,MAAM;IAAE;IACd;IACA;IACA,IAAGJ,KAAK,EAAE;MACNV,KAAK,CAACa,GAAG,CAAC,gDAAgDH,KAAK,EAAE,CAAC,CACjEK,IAAI,CAAEC,QAAQ,IAAKR,SAAS,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC,EAACF,CAAC,CAAC;IAC7D;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EACX,oBACIN,OAAA;IAAKkB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpBpB,MAAM,CAACqB,MAAM,GAAG,CAAC,gBACjBxB,OAAA;MAAAmB,QAAA,EACIhB,MAAM,CAACsB,GAAG,CAACC,KAAK,iBACb1B,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UAAAmB,QAAA,EAAIO,KAAK,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBvB,OAAA;UAAAmB,QAAA,EAAIO,KAAK,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BvB,OAAA;UAAAmB,QAAA,EAAIO,KAAK,CAACG;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHdG,KAAK,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAIJvB,OAAA;MAAAmB,QAAA,EAAK;IAEN;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAAArB,EAAA,CA3CKD,WAAW;EAAA,QAMIH,WAAW;AAAA;AAAAiC,EAAA,GAN1B9B,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}