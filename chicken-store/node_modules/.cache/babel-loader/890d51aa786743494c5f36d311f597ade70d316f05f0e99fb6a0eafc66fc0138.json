{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring_react_workspace\\\\chicken-store\\\\src\\\\component\\\\ChickDetail.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport '../css/ChickDetail.css';\n// axios useEffect 활용해서 데이터 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChickDetail = () => {\n  _s();\n  // {} = 특정값을 받아오는 것 [] = 변수명을 설정하는 것 \n  const {\n    id\n  } = useParams();\n  console.log(\"id : \", id);\n  const [chicken, setChicken] = useState(null);\n  useEffect(() => {\n    axios.get(`http://localhost:9090/api/chicken/${id}`).then(response => {\n      setChicken(response.data);\n    }).catch(e => alert(\"불러오는데 문제가 발생했습니다.\"));\n  }, []);\n\n  // 만약에 치킨 데이터가 없으면 로딩중\n  if (!chicken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529\\uC911 ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chicken-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: chicken.chickenName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chicken.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [chicken.price, \"\\uC6D0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handle수정하기,\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ChickDetail, \"Yv+3FzSmVSQ0Wrf8W1kCGi8BITM=\", false, function () {\n  return [useParams];\n});\n_c = ChickDetail;\nexport default ChickDetail;\nvar _c;\n$RefreshReg$(_c, \"ChickDetail\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","ChickDetail","_s","id","console","log","chicken","setChicken","get","then","response","data","catch","e","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","chickenName","description","price","onClick","handle수정하기","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring_react_workspace/chicken-store/src/component/ChickDetail.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport '../css/ChickDetail.css';\r\n// axios useEffect 활용해서 데이터 불러오기\r\n\r\nconst ChickDetail = () => {\r\n    // {} = 특정값을 받아오는 것 [] = 변수명을 설정하는 것 \r\n    const {id} = useParams();\r\n    console.log(\"id : \" ,id);\r\n    const [chicken, setChicken] = useState(null);\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:9090/api/chicken/${id}`)\r\n        .then(response => {\r\n            setChicken(response.data);\r\n        })\r\n        .catch(e=> alert(\"불러오는데 문제가 발생했습니다.\"));\r\n    }, [])\r\n\r\n\r\n    // 만약에 치킨 데이터가 없으면 로딩중\r\n    if(!chicken) {\r\n        return (\r\n            <div>\r\n                로딩중 ...\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"chicken-detail-container\">\r\n        <h1>{chicken.chickenName}</h1>\r\n        <p>{chicken.description}</p>\r\n        <p>{chicken.price}원</p>\r\n        <button onClick={handle수정하기}>수정하기</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChickDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,wBAAwB;AAC/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACxBM,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,EAAE,CAAC;EACxB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAE,MAAM;IACbD,KAAK,CAACa,GAAG,CAAC,qCAAqCL,EAAE,EAAE,CAAC,CACnDM,IAAI,CAACC,QAAQ,IAAI;MACdH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAGC,KAAK,CAAC,mBAAmB,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,IAAG,CAACR,OAAO,EAAE;IACT,oBACIN,OAAA;MAAAe,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;EACA,oBACInB,OAAA;IAAKoB,SAAS,EAAC,0BAA0B;IAAAL,QAAA,gBACzCf,OAAA;MAAAe,QAAA,EAAKT,OAAO,CAACe;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9BnB,OAAA;MAAAe,QAAA,EAAIT,OAAO,CAACgB;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MAAAe,QAAA,GAAIT,OAAO,CAACiB,KAAK,EAAC,QAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvBnB,OAAA;MAAQwB,OAAO,EAAEC,UAAW;MAAAV,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAAAjB,EAAA,CA/BKD,WAAW;EAAA,QAEAH,SAAS;AAAA;AAAA4B,EAAA,GAFpBzB,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}