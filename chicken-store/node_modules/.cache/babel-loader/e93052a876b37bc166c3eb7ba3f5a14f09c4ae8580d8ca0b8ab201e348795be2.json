{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring_react_workspace\\\\chicken-store\\\\src\\\\component\\\\ChickenList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/ChickenList.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChickenList = () => {\n  _s();\n  const [chickens, setChickens] = useState([]);\n  const navigate = useNavigate();\n\n  // 최초 1회 실행 useEffect 이용해서 처음에 치킨리스트.js 시작하자마자 DB에 저장된 치킨메뉴들 가져오기\n  //useEffect(() => {기능설정}, [언제 다시 기능을 동작 시킬 것인가])\n  useEffect(() => {\n    axios.get(\"http://localhost:9090/api/chicken\").then(response => {\n      setChickens(response.data);\n      console.log(\"chickens : \", chickens);\n    }) //가져온 데이터를 chickens 변수에 저장하는 과정\n    .catch(e => alert(\"불러오는데 문제가 발생했습니다.\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chicken-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCE58\\uD0A8 \\uBA54\\uB274\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: chickens.map(chicken => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"chicken-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chicken-name\",\n          children: chicken.chickenName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chicken-description\",\n          children: [chicken.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chicken-price\",\n          children: [\" \\u20A9\", chicken.price, \"\\uC6D0   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"detail-button\",\n          onClick: () => navigate(`/chicken-detail/${chicken.id}`),\n          children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this)]\n      }, chicken.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ChickenList, \"ihAXkcXMoapc9J96zLlj6nTwrBM=\", false, function () {\n  return [useNavigate];\n});\n_c = ChickenList;\nexport default ChickenList;\nvar _c;\n$RefreshReg$(_c, \"ChickenList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useNavigate","jsxDEV","_jsxDEV","ChickenList","_s","chickens","setChickens","navigate","get","then","response","data","console","log","catch","e","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chicken","chickenName","description","price","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring_react_workspace/chicken-store/src/component/ChickenList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../css/ChickenList.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst ChickenList = () => {\r\n    const [chickens, setChickens] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n// 최초 1회 실행 useEffect 이용해서 처음에 치킨리스트.js 시작하자마자 DB에 저장된 치킨메뉴들 가져오기\r\n//useEffect(() => {기능설정}, [언제 다시 기능을 동작 시킬 것인가])\r\nuseEffect(() => {\r\n    axios.get(\"http://localhost:9090/api/chicken\")\r\n    .then(response => {\r\n        setChickens(response.data);\r\n        console.log(\"chickens : \" , chickens);\r\n    }) //가져온 데이터를 chickens 변수에 저장하는 과정\r\n    .catch(e => alert(\"불러오는데 문제가 발생했습니다.\"));\r\n}, [])\r\n\r\n    return(\r\n        <div className='chicken-container'>\r\n            <h1>치킨 메뉴</h1>\r\n            <ul>\r\n            {chickens.map(chicken => (\r\n                <li key={chicken.id} className='chicken-item'>\r\n                    <div className='chicken-name'>{chicken.chickenName}</div>  \r\n                    <div className='chicken-description'>{chicken.description} </div>\r\n                    <div className='chicken-price'> ₩{chicken.price}원   </div>\r\n                   <button className='detail-button' onClick={ () => navigate(`/chicken-detail/${chicken.id}`)}>상세보기</button>\r\n                  \r\n                  {/*\r\n                  navigate와 Link 사용에 있어 태그를 사용하느냐, 기능을사용하느냐 차이 사용법만 다를 뿐\r\n                  큰 차이는 없음\r\n                   <button className='detail-button' onClick={ () => navigate(`/chicken-detail/${chicken.id}`)}>상세보기</button>\r\n                   <button className='detail-button'><Link to={`/chicken-detail/${chicken.id}`}> 상세보기</Link></button>\r\n                 */}\r\n                \r\n                   </li>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChickenList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAElC;EACA;EACAH,SAAS,CAAC,MAAM;IACZC,KAAK,CAACU,GAAG,CAAC,mCAAmC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;MACdJ,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAGR,QAAQ,CAAC;IACzC,CAAC,CAAC,CAAC;IAAA,CACFS,KAAK,CAACC,CAAC,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEF,oBACId,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdpB,OAAA;MAAAgB,QAAA,EACCb,QAAQ,CAACkB,GAAG,CAACC,OAAO,iBACjBtB,OAAA;QAAqBe,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzChB,OAAA;UAAKe,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEM,OAAO,CAACC;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzDpB,OAAA;UAAKe,SAAS,EAAC,qBAAqB;UAAAC,QAAA,GAAEM,OAAO,CAACE,WAAW,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjEpB,OAAA;UAAKe,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,SAAE,EAACM,OAAO,CAACG,KAAK,EAAC,WAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3DpB,OAAA;UAAQe,SAAS,EAAC,eAAe;UAACW,OAAO,EAAGA,CAAA,KAAMrB,QAAQ,CAAC,mBAAmBiB,OAAO,CAACK,EAAE,EAAE,CAAE;UAAAX,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJpGE,OAAO,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaZ,CACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAtCKD,WAAW;EAAA,QAEIH,WAAW;AAAA;AAAA8B,EAAA,GAF1B3B,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}