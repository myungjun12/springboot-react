{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring_react_workspace\\\\chicken-store\\\\src\\\\component\\\\ChickenList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChickenList = () => {\n  _s();\n  const [chickens, setChickens] = useState([]);\n\n  // 최초 1회 실행 useEffect 이용해서 처음에 치킨리스트.js 시작하자마자 DB에 저장된 치킨메뉴들 가져오기\n  // useEffect(() => {기능 설정}, [언제 다시 동작할 것인가?])\n\n  useEffect(() => {\n    axios.get(\"http://localhost:9090/api/chicken\").then(response => setChickens(response.data)) // 자바에서 응답 받은 치킨 data 를 setChicken 에 저장(save)\n    .catch(e => alert(\"문제 발생\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chicken-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCE58\\uD0A8 \\uBA54\\uB274\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), chickens.map(chicken => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [chicken.name, \" = \", chicken.description, \" = \", chicken.price, \"\\uC6D0\"]\n    }, chicken.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(ChickenList, \"yp6tSGPLq9EkPVa5n2DN7l6iGH0=\");\n_c = ChickenList;\nexport default ChickenList;\nvar _c;\n$RefreshReg$(_c, \"ChickenList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChickenList","_s","chickens","setChickens","get","then","response","data","catch","e","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chicken","name","description","price","id","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring_react_workspace/chicken-store/src/component/ChickenList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ChickenList = () => {\r\n\r\n    const [ chickens, setChickens] = useState([]);\r\n    \r\n    // 최초 1회 실행 useEffect 이용해서 처음에 치킨리스트.js 시작하자마자 DB에 저장된 치킨메뉴들 가져오기\r\n    // useEffect(() => {기능 설정}, [언제 다시 동작할 것인가?])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:9090/api/chicken\")\r\n        .then(response => setChickens(response.data)) // 자바에서 응답 받은 치킨 data 를 setChicken 에 저장(save)\r\n        .catch(e => alert(\"문제 발생\"));\r\n    }, []) \r\n        \r\n    return (\r\n        \r\n        <div className=\"chicken-container\">\r\n            <h1>치킨 메뉴</h1>\r\n            {chickens.map(chicken => (\r\n                <li key={chicken.id}>\r\n                    {chicken.name} = {chicken.description} = {chicken.price}원\r\n                </li>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChickenList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE7C;EACA;;EAEAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACO,GAAG,CAAC,mCAAmC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAAA,CAC7CC,KAAK,CAACC,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEIX,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbd,QAAQ,CAACe,GAAG,CAACC,OAAO,iBACjBnB,OAAA;MAAAa,QAAA,GACKM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,WAAW,EAAC,KAAG,EAACF,OAAO,CAACG,KAAK,EAAC,QAC5D;IAAA,GAFSH,OAAO,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAf,EAAA,CAxBKD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}