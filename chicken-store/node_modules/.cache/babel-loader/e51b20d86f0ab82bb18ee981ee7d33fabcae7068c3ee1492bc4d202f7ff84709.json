{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring_react_workspace\\\\chicken-store\\\\src\\\\component\\\\ChickDetail.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport '../css/ChickDetail.css';\n// axios useEffect 활용해서 데이터 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChickDetail = () => {\n  _s();\n  // {} = 특정값을 받아오는 것 [] = 변수명을 설정하는 것 \n  const {\n    id\n  } = useParams();\n  console.log(\"id : \", id);\n  const [chicken, setChicken] = useState(null);\n  // 수정된 데이터를 저장하는 공간 초기에는 수정한 내용이 없기 때문에 '' 빈 공간으로 설정\n  const [editData, setEditData] = useState({\n    chickenName: \"\",\n    description: \"\",\n    price: \"\"\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:9090/api/chicken/${id}`).then(response => {\n      setChicken(response.data);\n    }).catch(e => alert(\"불러오는데 문제가 발생했습니다.\"));\n  }, []);\n\n  // 만약에 치킨 데이터가 없으면 로딩중\n  if (!chicken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529\\uC911 ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  const handle수정하기 = () => {\n    // axios 이용해서 주소 불러오기\n    axios.put(`http://localhost:9090/api/chicken/${id}`, editData).then(response => {\n      setChicken(response.data); // 기존에 DB에 저장된 내용 가져오기\n      setEditData({\n        chickenName: response.data.chickenName,\n        description: response.data.description,\n        Price: response.data.price\n      });\n    }).catch(err => alert(\"err : \" + err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chicken-detail-container\",\n    children: a ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC218\\uC815\\uD558\\uB294 \\uAE30\\uB2A5 \\uB098\\uC624\\uAE30\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"chickenName\",\n        value: editData.chickenName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: editData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        value: editData.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC218\\uC815\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: chicken.chickenName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: chicken.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [chicken.price, \"\\uC6D0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handle수정하기,\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(ChickDetail, \"WgFr0ZGFfFH9Ohx43LdRItIQ/Dk=\", false, function () {\n  return [useParams];\n});\n_c = ChickDetail;\nexport default ChickDetail;\nvar _c;\n$RefreshReg$(_c, \"ChickDetail\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","ChickDetail","_s","id","console","log","chicken","setChicken","editData","setEditData","chickenName","description","price","get","then","response","data","catch","e","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","handle수정하기","put","Price","err","className","a","type","name","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring_react_workspace/chicken-store/src/component/ChickDetail.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport '../css/ChickDetail.css';\r\n// axios useEffect 활용해서 데이터 불러오기\r\n\r\nconst ChickDetail = () => {\r\n    // {} = 특정값을 받아오는 것 [] = 변수명을 설정하는 것 \r\n    const {id} = useParams();\r\n    console.log(\"id : \" ,id);\r\n    const [chicken, setChicken] = useState(null);\r\n    // 수정된 데이터를 저장하는 공간 초기에는 수정한 내용이 없기 때문에 '' 빈 공간으로 설정\r\n    const [editData, setEditData] = useState({\r\n        chickenName:\"\",\r\n        description:\"\",\r\n        price:\"\"\r\n    });\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:9090/api/chicken/${id}`)\r\n        .then(response => {\r\n            setChicken(response.data);\r\n        })\r\n        .catch(e=> alert(\"불러오는데 문제가 발생했습니다.\"));\r\n    }, [])\r\n\r\n\r\n    // 만약에 치킨 데이터가 없으면 로딩중\r\n    if(!chicken) {\r\n        return (\r\n            <div>\r\n                로딩중 ...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handle수정하기 = () => {\r\n        // axios 이용해서 주소 불러오기\r\n        axios.put(`http://localhost:9090/api/chicken/${id}`, editData)\r\n        .then(response => {\r\n            setChicken(response.data); // 기존에 DB에 저장된 내용 가져오기\r\n            setEditData({\r\n                chickenName:response.data.chickenName,\r\n                description:response.data.description,\r\n                Price : response.data.price\r\n            })\r\n        })\r\n        .catch(err => alert(\"err : \" + err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"chicken-detail-container\">\r\n\r\n        {/* 수정하기버튼을누르면 ? (수정하는 기능 나오기) : (안누르면 작성된 내용 보여주기) */}\r\n        {a ? \r\n        (<div>수정하는 기능 나오기 \r\n            <input type=\"text\" name=\"chickenName\" value={editData.chickenName}/>\r\n            <textarea name=\"description\" value={editData.description}/>\r\n            <input type=\"number\" name=\"price\" value={editData.price}/>\r\n            <button>수정완료</button>\r\n        </div>) \r\n        : \r\n        (<div>\r\n         <h1>{chicken.chickenName}</h1>\r\n        <p>{chicken.description}</p>\r\n        <p>{chicken.price}원</p>\r\n        <button onClick={handle수정하기}>수정하기</button>\r\n        </div>)}\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChickDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,wBAAwB;AAC/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACxBM,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,EAAE,CAAC;EACxB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,WAAW,EAAC,EAAE;IACdC,WAAW,EAAC,EAAE;IACdC,KAAK,EAAC;EACV,CAAC,CAAC;EAEFhB,SAAS,CAAE,MAAM;IACbD,KAAK,CAACkB,GAAG,CAAC,qCAAqCV,EAAE,EAAE,CAAC,CACnDW,IAAI,CAACC,QAAQ,IAAI;MACdR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAGC,KAAK,CAAC,mBAAmB,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,IAAG,CAACb,OAAO,EAAE;IACT,oBACIN,OAAA;MAAAoB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;EAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA9B,KAAK,CAAC+B,GAAG,CAAC,qCAAqCvB,EAAE,EAAE,EAAEK,QAAQ,CAAC,CAC7DM,IAAI,CAACC,QAAQ,IAAI;MACdR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC3BP,WAAW,CAAC;QACRC,WAAW,EAACK,QAAQ,CAACC,IAAI,CAACN,WAAW;QACrCC,WAAW,EAACI,QAAQ,CAACC,IAAI,CAACL,WAAW;QACrCgB,KAAK,EAAGZ,QAAQ,CAACC,IAAI,CAACJ;MAC1B,CAAC,CAAC;IACN,CAAC,CAAC,CACDK,KAAK,CAACW,GAAG,IAAIT,KAAK,CAAC,QAAQ,GAAGS,GAAG,CAAC,CAAC;EACxC,CAAC;EAED,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,0BAA0B;IAAAT,QAAA,EAGxCU,CAAC,gBACD9B,OAAA;MAAAoB,QAAA,GAAK,0DACF,eAAApB,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAEzB,QAAQ,CAACE;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpExB,OAAA;QAAUgC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAEzB,QAAQ,CAACG;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3DxB,OAAA;QAAO+B,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEzB,QAAQ,CAACI;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1DxB,OAAA;QAAAoB,QAAA,EAAQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,gBAELxB,OAAA;MAAAoB,QAAA,gBACApB,OAAA;QAAAoB,QAAA,EAAKd,OAAO,CAACI;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/BxB,OAAA;QAAAoB,QAAA,EAAId,OAAO,CAACK;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BxB,OAAA;QAAAoB,QAAA,GAAId,OAAO,CAACM,KAAK,EAAC,QAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvBxB,OAAA;QAAQkC,OAAO,EAAET,UAAW;QAAAL,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAjEKD,WAAW;EAAA,QAEAH,SAAS;AAAA;AAAAqC,EAAA,GAFpBlC,WAAW;AAmEjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}